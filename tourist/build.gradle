plugins {
    id 'java'
    id 'war'
}

group 'org.zerock'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('javax.servlet:javax.servlet-api:4.0.1')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
//  DB설정
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.4'
// lombok 설정
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    // HikariCP 설정
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.0'
    // ModelMapper 설정 : VO <-> DTO 변환하는 라이브러리
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.0.0'
    //log4j2 : 로그 출력 라이브러리 설정
    implementation group: 'org.apache.logging.log4j', name:'log4j-core', version:'2.17.2'
    implementation group: 'org.apache.logging.log4j', name:'log4j-api', version:'2.17.2'
    implementation group: 'org.apache.logging.log4j', name:'log4j-slf4j-impl', version:'2.17.2'
    // JSTL 설정
    implementation group: 'jstl', name: 'jstl', version: '1.2'
}

test {
    useJUnitPlatform()
}